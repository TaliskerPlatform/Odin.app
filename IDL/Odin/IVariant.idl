cpp_quote("/* Copyright 2015 Mo McRoberts.");
cpp_quote(" *");
cpp_quote(" *  Licensed under the Apache License, Version 2.0 (the \"License\");");
cpp_quote(" *  you may not use this file except in compliance with the License.");
cpp_quote(" *  You may obtain a copy of the License at");
cpp_quote(" *");
cpp_quote(" *      http://www.apache.org/licenses/LICENSE-2.0");
cpp_quote(" *");
cpp_quote(" *  Unless required by applicable law or agreed to in writing, software");
cpp_quote(" *  distributed under the License is distributed on an \"AS IS\" BASIS,");
cpp_quote(" *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.");
cpp_quote(" *  See the License for the specific language governing permissions and");
cpp_quote(" *  limitations under the License.");
cpp_quote(" */");

import "IObject.idl";

[
	object,
	uuid(ca20ee39-4290-4c3e-a02f-c83ccccb57ff),
	pointer_default(unique),
	cheader("Odin/IVariant.h")
]
interface IVariant: IObject
{
	cpp_quote("#ifndef W_NO_UNSTABLE_INTERFACES");
	cpp_quote("# warning The IVariant interface is currently considered unstable; source and binary compatibility is not assured.");
	cpp_quote("#endif");
	
	/* Basic types */
	const int T_UNDEFINED = 0;
	const int T_VOID = 1;
	const int T_STRING = 2;
	const int T_BOOLEAN = 3;
	const int T_INT = 4;
	const int T_DECIMAL = 5;
	const int T_ARRAY = 6;
	const int T_OBJECT = 7;   
	const int T_UUID = 8;
	const int T_DATETIME = 9;

	int typeCode(void);	
}
